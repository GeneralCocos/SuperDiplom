{"ast":null,"code":"import io from 'socket.io-client';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nclass GameService {\n  constructor() {\n    this.socket = null;\n    this.socket = null;\n  }\n  connect() {\n    this.socket = io(API_URL);\n    this.socket.on('connect', () => {\n      console.log('Connected to game server');\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from game server');\n    });\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  joinGame(gameId) {\n    if (this.socket) {\n      this.socket.emit('join_game', gameId);\n    }\n  }\n  makeMove(gameId, move) {\n    if (this.socket) {\n      this.socket.emit('make_move', {\n        gameId,\n        move\n      });\n    }\n  }\n  async getAIMove(fen, difficulty = 'easy') {\n    try {\n      const response = await axios.post(`${API_URL}/api/chess/ai-move`, {\n        fen,\n        difficulty\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting AI move:', error);\n      throw error;\n    }\n  }\n  async createGame(type) {\n    try {\n      const response = await axios.post(`${API_URL}/api/games`, {\n        type\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating game:', error);\n      throw error;\n    }\n  }\n  async getGameHistory(userId) {\n    try {\n      const response = await axios.get(`${API_URL}/api/games/history/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching game history:', error);\n      throw error;\n    }\n  }\n  onMoveMade(callback) {\n    if (this.socket) {\n      this.socket.on('move_made', callback);\n    }\n  }\n  onGameOver(callback) {\n    if (this.socket) {\n      this.socket.on('game_over', callback);\n    }\n  }\n}\nexport default new GameService();","map":{"version":3,"names":["io","axios","API_URL","process","env","REACT_APP_API_URL","GameService","constructor","socket","connect","on","console","log","disconnect","joinGame","gameId","emit","makeMove","move","getAIMove","fen","difficulty","response","post","data","error","createGame","type","getGameHistory","userId","get","onMoveMade","callback","onGameOver"],"sources":["D:/work/RealDiploma/client/src/services/gameService.ts"],"sourcesContent":["import io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nclass GameService {\r\n  private socket: ReturnType<typeof io> | null = null;\r\n\r\n  constructor() {\r\n    this.socket = null;\r\n  }\r\n\r\n  connect() {\r\n    this.socket = io(API_URL);\r\n    \r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to game server');\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from game server');\r\n    });\r\n\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  joinGame(gameId: string) {\r\n    if (this.socket) {\r\n      this.socket.emit('join_game', gameId);\r\n    }\r\n  }\r\n\r\n  makeMove(gameId: string, move: any) {\r\n    if (this.socket) {\r\n      this.socket.emit('make_move', { gameId, move });\r\n    }\r\n  }\r\n\r\n  async getAIMove(fen: string, difficulty: string = 'easy') {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/chess/ai-move`, {\r\n        fen,\r\n        difficulty\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting AI move:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createGame(type: 'ai' | 'human') {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/games`, {\r\n        type\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating game:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getGameHistory(userId: string) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/games/history/${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching game history:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  onMoveMade(callback: (data: any) => void) {\r\n    if (this.socket) {\r\n      this.socket.on('move_made', callback);\r\n    }\r\n  }\r\n\r\n  onGameOver(callback: (data: any) => void) {\r\n    if (this.socket) {\r\n      this.socket.on('game_over', callback);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new GameService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}