{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\RealDiploma\\\\client\\\\src\\\\contexts\\\\GameContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport gameService from '../services/gameService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext(undefined);\nexport const useGame = () => {\n  _s();\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n};\n_s(useGame, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const GameProvider = ({\n  children\n}) => {\n  _s2();\n  const [gameId, setGameId] = useState(null);\n  const [gameType, setGameType] = useState(null);\n  const [playerColor, setPlayerColor] = useState('white');\n  const [isPlayerTurn, setIsPlayerTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(false);\n  const [position, setPosition] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n  useEffect(() => {\n    if (gameType === 'human') {\n      const socket = gameService.connect();\n      socket.on('move_made', data => {\n        setPosition(data.position);\n        setIsPlayerTurn(true);\n      });\n      socket.on('game_over', () => {\n        setGameOver(true);\n      });\n      return () => {\n        gameService.disconnect();\n      };\n    }\n  }, [gameType]);\n  const startGame = async type => {\n    try {\n      const {\n        gameId: newGameId,\n        color\n      } = await gameService.createGame(type);\n      setGameId(newGameId);\n      setGameType(type);\n      setPlayerColor(color);\n      setIsPlayerTurn(color === 'white');\n      setGameOver(false);\n      setPosition('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n      if (type === 'human') {\n        gameService.joinGame(newGameId);\n      }\n    } catch (error) {\n      console.error('Error starting game:', error);\n      throw error;\n    }\n  };\n  const makeMove = async move => {\n    if (gameType === 'ai') {\n      setIsPlayerTurn(false);\n      try {\n        const aiMove = await gameService.getAIMove(position);\n        setPosition(aiMove.position);\n        setIsPlayerTurn(true);\n        if (aiMove.gameOver) {\n          setGameOver(true);\n        }\n      } catch (error) {\n        console.error('Error making AI move:', error);\n        setIsPlayerTurn(true);\n      }\n    } else if (gameType === 'human' && gameId) {\n      gameService.makeMove(gameId, move);\n      setIsPlayerTurn(false);\n    }\n  };\n  const resetGame = () => {\n    setGameId(null);\n    setGameType(null);\n    setPlayerColor('white');\n    setIsPlayerTurn(true);\n    setGameOver(false);\n    setPosition('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      gameId,\n      gameType,\n      playerColor,\n      isPlayerTurn,\n      gameOver,\n      position,\n      startGame,\n      makeMove,\n      resetGame\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s2(GameProvider, \"5XuT/OWU6JWkhoPA778ZONGop3A=\");\n_c = GameProvider;\nexport default GameContext;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","gameService","jsxDEV","_jsxDEV","GameContext","undefined","useGame","_s","context","Error","GameProvider","children","_s2","gameId","setGameId","gameType","setGameType","playerColor","setPlayerColor","isPlayerTurn","setIsPlayerTurn","gameOver","setGameOver","position","setPosition","socket","connect","on","data","disconnect","startGame","type","newGameId","color","createGame","joinGame","error","console","makeMove","move","aiMove","getAIMove","resetGame","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/work/RealDiploma/client/src/contexts/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport gameService from '../services/gameService';\r\n\r\ninterface GameContextType {\r\n  gameId: string | null;\r\n  gameType: 'ai' | 'human' | null;\r\n  playerColor: 'white' | 'black';\r\n  isPlayerTurn: boolean;\r\n  gameOver: boolean;\r\n  position: string;\r\n  startGame: (type: 'ai' | 'human') => Promise<void>;\r\n  makeMove: (move: any) => void;\r\n  resetGame: () => void;\r\n}\r\n\r\nconst GameContext = createContext<GameContextType | undefined>(undefined);\r\n\r\nexport const useGame = () => {\r\n  const context = useContext(GameContext);\r\n  if (!context) {\r\n    throw new Error('useGame must be used within a GameProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface GameProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const GameProvider: React.FC<GameProviderProps> = ({ children }) => {\r\n  const [gameId, setGameId] = useState<string | null>(null);\r\n  const [gameType, setGameType] = useState<'ai' | 'human' | null>(null);\r\n  const [playerColor, setPlayerColor] = useState<'white' | 'black'>('white');\r\n  const [isPlayerTurn, setIsPlayerTurn] = useState(true);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [position, setPosition] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\r\n\r\n  useEffect(() => {\r\n    if (gameType === 'human') {\r\n      const socket = gameService.connect();\r\n\r\n      socket.on('move_made', (data) => {\r\n        setPosition(data.position);\r\n        setIsPlayerTurn(true);\r\n      });\r\n\r\n      socket.on('game_over', () => {\r\n        setGameOver(true);\r\n      });\r\n\r\n      return () => {\r\n        gameService.disconnect();\r\n      };\r\n    }\r\n  }, [gameType]);\r\n\r\n  const startGame = async (type: 'ai' | 'human') => {\r\n    try {\r\n      const { gameId: newGameId, color } = await gameService.createGame(type);\r\n      setGameId(newGameId);\r\n      setGameType(type);\r\n      setPlayerColor(color);\r\n      setIsPlayerTurn(color === 'white');\r\n      setGameOver(false);\r\n      setPosition('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\r\n\r\n      if (type === 'human') {\r\n        gameService.joinGame(newGameId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting game:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const makeMove = async (move: any) => {\r\n    if (gameType === 'ai') {\r\n      setIsPlayerTurn(false);\r\n      try {\r\n        const aiMove = await gameService.getAIMove(position);\r\n        setPosition(aiMove.position);\r\n        setIsPlayerTurn(true);\r\n        \r\n        if (aiMove.gameOver) {\r\n          setGameOver(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error making AI move:', error);\r\n        setIsPlayerTurn(true);\r\n      }\r\n    } else if (gameType === 'human' && gameId) {\r\n      gameService.makeMove(gameId, move);\r\n      setIsPlayerTurn(false);\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setGameId(null);\r\n    setGameType(null);\r\n    setPlayerColor('white');\r\n    setIsPlayerTurn(true);\r\n    setGameOver(false);\r\n    setPosition('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        gameId,\r\n        gameType,\r\n        playerColor,\r\n        isPlayerTurn,\r\n        gameOver,\r\n        position,\r\n        startGame,\r\n        makeMove,\r\n        resetGame,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GameContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}